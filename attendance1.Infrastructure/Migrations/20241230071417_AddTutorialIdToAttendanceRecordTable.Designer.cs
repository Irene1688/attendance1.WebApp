// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using attendance1.Infrastructure.Persistence.Contexts;

#nullable disable

namespace attendance1.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241230071417_AddTutorialIdToAttendanceRecordTable")]
    partial class AddTutorialIdToAttendanceRecordTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("attendance1.Domain.Entities.AdminProgramme", b =>
                {
                    b.Property<int>("ApId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("apID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApId"));

                    b.Property<int?>("ProgrammeId")
                        .HasColumnType("int")
                        .HasColumnName("programmeID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.HasKey("ApId")
                        .HasName("PK__adminPro__5A28C0A8C465DF30");

                    b.HasIndex("ProgrammeId");

                    b.HasIndex("UserId");

                    b.ToTable("adminProgramme", (string)null);
                });

            modelBuilder.Entity("attendance1.Domain.Entities.AttendanceRecord", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recordID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<string>("AttendanceCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("attendanceCode");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseID");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("endTime");

                    b.Property<bool>("IsLecture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isLecture");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("startTime");

                    b.Property<int?>("TutorialId")
                        .HasColumnType("int")
                        .HasColumnName("tutorialID");

                    b.HasKey("RecordId")
                        .HasName("PK__attendan__D825197EC0BDBED7");

                    b.HasIndex("CourseId");

                    b.HasIndex("TutorialId");

                    b.ToTable("attendanceRecord", (string)null);
                });

            modelBuilder.Entity("attendance1.Domain.Entities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("courseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<int?>("AttendanceCodeDuration")
                        .HasColumnType("int")
                        .HasColumnName("attendanceCodeDuration");

                    b.Property<string>("AttendanceCodeMode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("attendanceCodeMode");

                    b.Property<string>("ClassDay")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("classDay");

                    b.Property<bool?>("CourseActive")
                        .HasColumnType("bit")
                        .HasColumnName("courseActive");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("courseCode");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("courseName");

                    b.Property<string>("CourseSession")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("courseSession");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("LecturerId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("lecturerID");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int")
                        .HasColumnName("programmeID");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int")
                        .HasColumnName("semesterID");

                    b.HasKey("CourseId")
                        .HasName("PK__course__2AA84FF16AF6CCB1");

                    b.HasIndex("ProgrammeId");

                    b.HasIndex("SemesterId");

                    b.ToTable("course", (string)null);
                });

            modelBuilder.Entity("attendance1.Domain.Entities.CourseSemester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("semesterID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<DateOnly>("EndWeek")
                        .HasColumnType("date")
                        .HasColumnName("endWeek");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<DateOnly>("StartWeek")
                        .HasColumnType("date")
                        .HasColumnName("startWeek");

                    b.HasKey("SemesterId")
                        .HasName("PK__courseSe__F2F37EA7D72E5851");

                    b.ToTable("courseSemester", (string)null);
                });

            modelBuilder.Entity("attendance1.Domain.Entities.EnrolledStudent", b =>
                {
                    b.Property<int>("EnrolledId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("enrolledID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrolledId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("studentID");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("studentName");

                    b.Property<int>("TutorialId")
                        .HasColumnType("int")
                        .HasColumnName("tutorialID");

                    b.HasKey("EnrolledId")
                        .HasName("PK__enrolled__FF4DB9ECBAF09176");

                    b.HasIndex("CourseId");

                    b.HasIndex("TutorialId");

                    b.ToTable("enrolledStudent", (string)null);
                });

            modelBuilder.Entity("attendance1.Domain.Entities.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("feedbackId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FeedbackContent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("feedbackContent");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("studentId");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__2613FD240A0EE6B7");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("attendance1.Domain.Entities.Programme", b =>
                {
                    b.Property<int>("ProgrammeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("programmeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgrammeId"));

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("ProgrammeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("programmeName");

                    b.HasKey("ProgrammeId")
                        .HasName("PK__tmp_ms_x__E49167C24EC7D561");

                    b.ToTable("programme", (string)null);
                });

            modelBuilder.Entity("attendance1.Domain.Entities.StudentAttendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attendanceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseID");

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int")
                        .HasColumnName("deviceID");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit")
                        .HasColumnName("isPresent");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("recordID");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("remark");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("studentID");

                    b.HasKey("AttendanceId")
                        .HasName("PK__studentA__0F09E0C6A1440102");

                    b.HasIndex("CourseId");

                    b.HasIndex("DeviceId");

                    b.HasIndex(new[] { "RecordId", "DeviceId" }, "UQ_attendanceRecord_recordID_device")
                        .IsUnique()
                        .HasFilter("[deviceID] IS NOT NULL");

                    b.HasIndex(new[] { "RecordId", "StudentId" }, "UQ_attendanceRecord_recordID_student")
                        .IsUnique();

                    b.ToTable("studentAttendance", (string)null);
                });

            modelBuilder.Entity("attendance1.Domain.Entities.StudentDevice", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("deviceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceId"));

                    b.Property<DateOnly?>("BindDate")
                        .HasColumnType("date")
                        .HasColumnName("bindDate");

                    b.Property<string>("DeviceCode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("deviceCode");

                    b.Property<string>("DeviceOs")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("deviceOS");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("deviceType");

                    b.Property<string>("MacAddress")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("macAddress");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("studentID");

                    b.Property<string>("UuId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("uuID");

                    b.HasKey("DeviceId")
                        .HasName("PK__studentD__84BE14B71B8283B5");

                    b.ToTable("studentDevice", (string)null);
                });

            modelBuilder.Entity("attendance1.Domain.Entities.Tutorial", b =>
                {
                    b.Property<int>("TutorialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tutorialID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TutorialId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("LectureId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("lecturerID");

                    b.Property<string>("TutorialClassDay")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tutorialClassDay");

                    b.Property<string>("TutorialName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tutorialName");

                    b.Property<int?>("UserDetailUserId")
                        .HasColumnType("int");

                    b.HasKey("TutorialId")
                        .HasName("PK__tutorial__2613FD240A0EE6B7");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserDetailUserId");

                    b.ToTable("tutorial", (string)null);
                });

            modelBuilder.Entity("attendance1.Domain.Entities.UserDetail", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AccRole")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("accRole");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("LecturerId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("lecturerID");

                    b.Property<string>("StudentId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("studentID");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userName");

                    b.Property<string>("UserPassword")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("userPassword");

                    b.HasKey("UserId")
                        .HasName("PK__userDeta__CB9A1CDF97B60F3A");

                    b.ToTable("userDetail", (string)null);
                });

            modelBuilder.Entity("attendance1.Domain.Entities.AdminProgramme", b =>
                {
                    b.HasOne("attendance1.Domain.Entities.Programme", "Programme")
                        .WithMany("AdminProgrammes")
                        .HasForeignKey("ProgrammeId")
                        .HasConstraintName("FK__adminProg__progr__03F0984C");

                    b.HasOne("attendance1.Domain.Entities.UserDetail", "User")
                        .WithMany("AdminProgrammes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__adminProg__userI__02FC7413");

                    b.Navigation("Programme");

                    b.Navigation("User");
                });

            modelBuilder.Entity("attendance1.Domain.Entities.AttendanceRecord", b =>
                {
                    b.HasOne("attendance1.Domain.Entities.Course", "Course")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__attendanc__cours__4E88ABD4");

                    b.HasOne("attendance1.Domain.Entities.Tutorial", "Tutorial")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("TutorialId")
                        .HasConstraintName("FK__attendanc__tutor__4E88ABD4");

                    b.Navigation("Course");

                    b.Navigation("Tutorial");
                });

            modelBuilder.Entity("attendance1.Domain.Entities.Course", b =>
                {
                    b.HasOne("attendance1.Domain.Entities.Programme", "Programme")
                        .WithMany("Courses")
                        .HasForeignKey("ProgrammeId")
                        .IsRequired()
                        .HasConstraintName("FK__course__programm__6FE99F9F");

                    b.HasOne("attendance1.Domain.Entities.CourseSemester", "Semester")
                        .WithMany("Courses")
                        .HasForeignKey("SemesterId")
                        .IsRequired()
                        .HasConstraintName("FK__course__semester__440B1D61");

                    b.Navigation("Programme");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("attendance1.Domain.Entities.EnrolledStudent", b =>
                {
                    b.HasOne("attendance1.Domain.Entities.Course", "Course")
                        .WithMany("EnrolledStudents")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__enrolledS__cours__46E78A0C");

                    b.HasOne("attendance1.Domain.Entities.Tutorial", "Tutorial")
                        .WithMany("EnrolledStudents")
                        .HasForeignKey("TutorialId")
                        .IsRequired()
                        .HasConstraintName("FK__enrolledS__tutor__46E78A0C");

                    b.Navigation("Course");

                    b.Navigation("Tutorial");
                });

            modelBuilder.Entity("attendance1.Domain.Entities.StudentAttendance", b =>
                {
                    b.HasOne("attendance1.Domain.Entities.Course", "Course")
                        .WithMany("StudentAttendances")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__studentAt__cours__49C3F6B7");

                    b.HasOne("attendance1.Domain.Entities.StudentDevice", "Device")
                        .WithMany("StudentAttendances")
                        .HasForeignKey("DeviceId")
                        .HasConstraintName("FK_studentAttendance_studentDevice");

                    b.HasOne("attendance1.Domain.Entities.AttendanceRecord", "Record")
                        .WithMany("StudentAttendances")
                        .HasForeignKey("RecordId")
                        .IsRequired()
                        .HasConstraintName("FK_studentAttendance_attendanceRecord");

                    b.Navigation("Course");

                    b.Navigation("Device");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("attendance1.Domain.Entities.Tutorial", b =>
                {
                    b.HasOne("attendance1.Domain.Entities.Course", "Course")
                        .WithMany("Tutorials")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__tutorial__course__49C3F6B7");

                    b.HasOne("attendance1.Domain.Entities.UserDetail", null)
                        .WithMany("Tutorials")
                        .HasForeignKey("UserDetailUserId");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("attendance1.Domain.Entities.AttendanceRecord", b =>
                {
                    b.Navigation("StudentAttendances");
                });

            modelBuilder.Entity("attendance1.Domain.Entities.Course", b =>
                {
                    b.Navigation("AttendanceRecords");

                    b.Navigation("EnrolledStudents");

                    b.Navigation("StudentAttendances");

                    b.Navigation("Tutorials");
                });

            modelBuilder.Entity("attendance1.Domain.Entities.CourseSemester", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("attendance1.Domain.Entities.Programme", b =>
                {
                    b.Navigation("AdminProgrammes");

                    b.Navigation("Courses");
                });

            modelBuilder.Entity("attendance1.Domain.Entities.StudentDevice", b =>
                {
                    b.Navigation("StudentAttendances");
                });

            modelBuilder.Entity("attendance1.Domain.Entities.Tutorial", b =>
                {
                    b.Navigation("AttendanceRecords");

                    b.Navigation("EnrolledStudents");
                });

            modelBuilder.Entity("attendance1.Domain.Entities.UserDetail", b =>
                {
                    b.Navigation("AdminProgrammes");

                    b.Navigation("Tutorials");
                });
#pragma warning restore 612, 618
        }
    }
}
